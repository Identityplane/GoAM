basePath: /
definitions:
  admin_api.DashboardResponse:
    properties:
      flows:
        $ref: '#/definitions/admin_api.FlowInfo'
      user_stats:
        $ref: '#/definitions/model.UserStats'
    type: object
  admin_api.FlowInfo:
    properties:
      active_flows:
        type: integer
      total_flows:
        type: integer
    type: object
  admin_api.PagedResponse:
    properties:
      data: {}
      pagination:
        $ref: '#/definitions/admin_api.Pagination'
    type: object
  admin_api.Pagination:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  admin_api.ShortRealmInfo:
    properties:
      realm:
        type: string
      realm_name:
        type: string
    type: object
  admin_api.ShortTenantInfo:
    properties:
      realms:
        items:
          $ref: '#/definitions/admin_api.ShortRealmInfo'
        type: array
      tenant:
        type: string
      tenant_name:
        type: string
    type: object
  model.Realm:
    properties:
      realm:
        description: e.g. "customers"
        type: string
      realm_name:
        description: e.g. "Our Customers"
        type: string
      tenant:
        description: e.g. "acme"
        type: string
    type: object
  model.User:
    description: User information and attributes
    properties:
      attributes:
        additionalProperties:
          type: string
        description: Extensibility
        example:
          ' ''location''': ' ''HQ''}'
          '{''department''': ' ''IT'''
        type: object
      created_at:
        description: Audit
        example: "2024-01-01T00:00:00Z"
        type: string
      display_name:
        description: Identity Information
        example: John Doe
        type: string
      email:
        description: Additional contact information
        example: john.doe@example.com
        type: string
      email_verified:
        example: true
        type: boolean
      failed_login_attempts_mfa:
        example: 0
        type: integer
      failed_login_attempts_password:
        example: 0
        type: integer
      failed_login_attempts_webauthn:
        example: 0
        type: integer
      family_name:
        example: Doe
        type: string
      federated_id:
        example: "123456789"
        type: string
      federated_idp:
        description: Federation
        example: google
        type: string
      given_name:
        example: John
        type: string
      groups:
        example:
        - '[''developers'''
        - ' ''support'']'
        items:
          type: string
        type: array
      id:
        description: Unique UUID for the user
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      last_login_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      locale:
        description: Locale
        example: en-US
        type: string
      mfa_locked:
        example: false
        type: boolean
      password_locked:
        example: false
        type: boolean
      phone:
        example: "+1234567890"
        type: string
      phone_verified:
        example: false
        type: boolean
      realm:
        example: customers
        type: string
      roles:
        description: User roles and groups
        example:
        - '[''admin'''
        - ' ''user'']'
        items:
          type: string
        type: array
      status:
        description: User status
        example: active
        type: string
      tenant:
        description: Organization Context
        example: acme
        type: string
      trusted_devices:
        description: Devices
        example: device1,device2
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      username:
        example: john.doe
        type: string
      webauthn_locked:
        example: false
        type: boolean
    type: object
  model.UserStats:
    description: User statistics for a realm
    properties:
      active_users:
        example: 80
        type: integer
      email_verified:
        example: 90
        type: integer
      federated_users:
        example: 20
        type: integer
      inactive_users:
        example: 15
        type: integer
      locked_users:
        example: 5
        type: integer
      mfa_enabled:
        example: 40
        type: integer
      phone_verified:
        example: 70
        type: integer
      total_users:
        example: 100
        type: integer
      webauthn_enabled:
        example: 30
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the admin API for GoIAM identity and access management system
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoIAM Admin API
  version: "1.0"
paths:
  /{tenant}/{realm}/auth/{path}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Handles authentication requests by executing the specified flow.
        Returns either a prompt for user input or a final result. Supports debug mode
        for additional information.
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Flow path/name
        in: path
        name: path
        required: true
        type: string
      - description: Enable debug mode
        in: query
        name: debug
        type: boolean
      - description: Current step in the flow
        in: formData
        name: step
        type: string
      - description: User input for the current step's prompts
        in: formData
        name: '{prompt_key}'
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML response containing either a prompt form or the final
            result
          schema:
            type: string
        "404":
          description: Realm or flow not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Process authentication request
      tags:
      - Authentication
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Handles authentication requests by executing the specified flow.
        Returns either a prompt for user input or a final result. Supports debug mode
        for additional information.
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Flow path/name
        in: path
        name: path
        required: true
        type: string
      - description: Enable debug mode
        in: query
        name: debug
        type: boolean
      - description: Current step in the flow
        in: formData
        name: step
        type: string
      - description: User input for the current step's prompts
        in: formData
        name: '{prompt_key}'
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML response containing either a prompt form or the final
            result
          schema:
            type: string
        "404":
          description: Realm or flow not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Process authentication request
      tags:
      - Authentication
  /{tenant}/{realm}/debug/{flow}/graph.png:
    get:
      description: Generates and returns a PNG image visualization of the specified
        authentication flow
      parameters:
      - description: Tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm
        in: path
        name: realm
        required: true
        type: string
      - description: Flow Route
        in: path
        name: flow
        required: true
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: PNG image of the flow graph
          schema:
            type: file
        "400":
          description: Bad request - missing flow parameter
          schema:
            type: string
        "404":
          description: Flow not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Generate PNG graph of a flow
      tags:
      - Debug
  /{tenant}/{realm}/debug/{flow}/graph.svg:
    get:
      description: Generates and returns an SVG image visualization of the specified
        authentication flow
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Flow name
        in: path
        name: flow
        required: true
        type: string
      produces:
      - image/svg+xml
      responses:
        "200":
          description: SVG image of the flow graph
          schema:
            type: file
        "400":
          description: Bad request - missing flow parameter
          schema:
            type: string
        "404":
          description: Flow not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Generate SVG graph of a flow
      tags:
      - Debug
  /{tenant}/{realm}/debug/flows:
    get:
      description: Returns a JSON list of available authentication flows for the specified
        tenant and realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of flows with name and route
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: List flows for a specific tenant and realm
      tags:
      - Debug
  /{tenant}/{realm}/static/{filename}:
    get:
      description: Serves static files (images, CSS, JavaScript, etc.) for a specific
        tenant and realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Name of the static file to serve
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: The requested static file
          schema:
            type: file
        "404":
          description: File not found
          schema:
            type: string
      summary: Serve static files
      tags:
      - Static
  /admin/{tenant}/{realm}/:
    delete:
      description: Deletes an existing realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a realm
      tags:
      - Realms
    get:
      consumes:
      - application/json
      description: Returns the configuration for a specific realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Realm'
        "404":
          description: Realm not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a specific realm
      tags:
      - Realms
    patch:
      consumes:
      - application/json
      description: Updates an existing realm's name
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Realm update payload
        in: body
        name: request
        required: true
        schema:
          properties:
            realm_name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Realm'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Realm not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a realm
      tags:
      - Realms
    post:
      consumes:
      - application/json
      description: Creates a new realm with the given configuration
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Realm creation payload
        in: body
        name: request
        required: true
        schema:
          properties:
            realm_name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Realm'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new realm
      tags:
      - Realms
  /admin/{tenant}/{realm}/dashboard:
    get:
      consumes:
      - application/json
      description: Returns combined user stats and flow information for a tenant/realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_api.DashboardResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get dashboard data
      tags:
      - Dashboard
  /admin/{tenant}/{realm}/users:
    get:
      consumes:
      - application/json
      description: Get a paginated list of users
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_api.PagedResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List users
      tags:
      - Users
  /admin/{tenant}/{realm}/users/{username}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get a specific user by username
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user
      tags:
      - Users
  /admin/{tenant}/{realm}/users/stats:
    get:
      consumes:
      - application/json
      description: Get user statistics for the realm
      parameters:
      - description: Tenant ID
        in: path
        name: tenant
        required: true
        type: string
      - description: Realm ID
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserStats'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user statistics
      tags:
      - Users
  /admin/realms:
    get:
      consumes:
      - application/json
      description: Returns a list of all available tenant/realm combinations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/admin_api.ShortTenantInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List all tenant/realm combinations
      tags:
      - Realms
  /debug/flows/all:
    get:
      description: Returns a plain text list of all authentication flows across all
        tenants and realms
      produces:
      - text/plain
      responses:
        "200":
          description: List of flows in plain text format
          schema:
            type: string
      summary: List all flows across all tenants/realms
      tags:
      - Debug
  /healthz:
    get:
      description: Returns a simple status indicating if the service is alive
      produces:
      - application/json
      responses:
        "200":
          description: Service status
          schema:
            type: object
      summary: Check service liveness
      tags:
      - Health
  /info:
    get:
      description: Returns basic information about the service including version
      produces:
      - application/json
      responses:
        "200":
          description: Service information
          schema:
            type: object
      summary: Get service information
      tags:
      - Health
  /readyz:
    get:
      description: Returns the readiness status of the service and its components
      produces:
      - application/json
      responses:
        "200":
          description: Service and components readiness status
          schema:
            type: object
        "503":
          description: Service is not ready
          schema:
            type: object
      summary: Check service readiness
      tags:
      - Health
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
