// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users/stats": {
            "get": {
                "description": "Get user statistics for the realm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "description": "Get a specific user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{tenant}/{realm}/admin/users": {
            "get": {
                "description": "Get a paginated list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Realm ID",
                        "name": "realm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_api.PagedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_api.PagedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {
                    "$ref": "#/definitions/admin_api.Pagination"
                }
            }
        },
        "admin_api.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "description": "User information and attributes",
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Extensibility",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        " 'location'": " 'HQ'}",
                        "{'department'": " 'IT'"
                    }
                },
                "created_at": {
                    "description": "Audit",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "display_name": {
                    "description": "Identity Information",
                    "type": "string",
                    "example": "John Doe"
                },
                "email": {
                    "description": "Additional contact information",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "email_verified": {
                    "type": "boolean",
                    "example": true
                },
                "failed_login_attempts_mfa": {
                    "type": "integer",
                    "example": 0
                },
                "failed_login_attempts_password": {
                    "type": "integer",
                    "example": 0
                },
                "failed_login_attempts_webauthn": {
                    "type": "integer",
                    "example": 0
                },
                "family_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "federated_id": {
                    "type": "string",
                    "example": "123456789"
                },
                "federated_idp": {
                    "description": "Federation",
                    "type": "string",
                    "example": "google"
                },
                "given_name": {
                    "type": "string",
                    "example": "John"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['developers'",
                        " 'support']"
                    ]
                },
                "id": {
                    "description": "Unique UUID for the user",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "last_login_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "locale": {
                    "description": "Locale",
                    "type": "string",
                    "example": "en-US"
                },
                "mfa_locked": {
                    "type": "boolean",
                    "example": false
                },
                "password_locked": {
                    "type": "boolean",
                    "example": false
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "phone_verified": {
                    "type": "boolean",
                    "example": false
                },
                "realm": {
                    "type": "string",
                    "example": "customers"
                },
                "roles": {
                    "description": "User roles and groups",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['admin'",
                        " 'user']"
                    ]
                },
                "status": {
                    "description": "User status",
                    "type": "string",
                    "example": "active"
                },
                "tenant": {
                    "description": "Organization Context",
                    "type": "string",
                    "example": "acme"
                },
                "trusted_devices": {
                    "description": "Devices",
                    "type": "string",
                    "example": "device1,device2"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "username": {
                    "type": "string",
                    "example": "john.doe"
                },
                "webauthn_locked": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "model.UserStats": {
            "description": "User statistics for a realm",
            "type": "object",
            "properties": {
                "active_users": {
                    "type": "integer",
                    "example": 80
                },
                "email_verified": {
                    "type": "integer",
                    "example": 90
                },
                "federated_users": {
                    "type": "integer",
                    "example": 20
                },
                "inactive_users": {
                    "type": "integer",
                    "example": 15
                },
                "locked_users": {
                    "type": "integer",
                    "example": 5
                },
                "mfa_enabled": {
                    "type": "integer",
                    "example": 40
                },
                "phone_verified": {
                    "type": "integer",
                    "example": 70
                },
                "total_users": {
                    "type": "integer",
                    "example": 100
                },
                "webauthn_enabled": {
                    "type": "integer",
                    "example": 30
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "GoIAM Admin API",
	Description:      "This is the admin API for GoIAM identity and access management system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
